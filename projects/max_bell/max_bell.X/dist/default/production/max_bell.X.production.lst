

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Thu Mar  6 01:38:50 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	intentry,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     	;# 
    11  0001                     	;# 
    12  0002                     	;# 
    13  0003                     	;# 
    14  0004                     	;# 
    15  0005                     	;# 
    16  0006                     	;# 
    17  0007                     	;# 
    18  0008                     	;# 
    19  0009                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  000E                     	;# 
    25  0011                     	;# 
    26  0012                     	;# 
    27  0013                     	;# 
    28  0014                     	;# 
    29  0015                     	;# 
    30  0016                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001B                     	;# 
    37  001C                     	;# 
    38  001E                     	;# 
    39  001F                     	;# 
    40  008C                     	;# 
    41  008D                     	;# 
    42  008E                     	;# 
    43  0091                     	;# 
    44  0092                     	;# 
    45  0093                     	;# 
    46  0094                     	;# 
    47  0095                     	;# 
    48  0096                     	;# 
    49  0097                     	;# 
    50  0098                     	;# 
    51  0099                     	;# 
    52  009A                     	;# 
    53  009B                     	;# 
    54  009B                     	;# 
    55  009C                     	;# 
    56  009D                     	;# 
    57  009E                     	;# 
    58  010C                     	;# 
    59  010D                     	;# 
    60  010E                     	;# 
    61  0111                     	;# 
    62  0112                     	;# 
    63  0113                     	;# 
    64  0114                     	;# 
    65  0115                     	;# 
    66  0116                     	;# 
    67  0117                     	;# 
    68  0118                     	;# 
    69  0119                     	;# 
    70  011A                     	;# 
    71  011B                     	;# 
    72  011D                     	;# 
    73  011E                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  018E                     	;# 
    77  0191                     	;# 
    78  0191                     	;# 
    79  0192                     	;# 
    80  0193                     	;# 
    81  0193                     	;# 
    82  0193                     	;# 
    83  0194                     	;# 
    84  0195                     	;# 
    85  0196                     	;# 
    86  0199                     	;# 
    87  019A                     	;# 
    88  019B                     	;# 
    89  019B                     	;# 
    90  019C                     	;# 
    91  019D                     	;# 
    92  019E                     	;# 
    93  019F                     	;# 
    94  020C                     	;# 
    95  020D                     	;# 
    96  020E                     	;# 
    97  0211                     	;# 
    98  0211                     	;# 
    99  0212                     	;# 
   100  0212                     	;# 
   101  0213                     	;# 
   102  0213                     	;# 
   103  0214                     	;# 
   104  0214                     	;# 
   105  0215                     	;# 
   106  0215                     	;# 
   107  0215                     	;# 
   108  0216                     	;# 
   109  0216                     	;# 
   110  0217                     	;# 
   111  0217                     	;# 
   112  0219                     	;# 
   113  021A                     	;# 
   114  021B                     	;# 
   115  021C                     	;# 
   116  021D                     	;# 
   117  021E                     	;# 
   118  021F                     	;# 
   119  0291                     	;# 
   120  0292                     	;# 
   121  0293                     	;# 
   122  0294                     	;# 
   123  0295                     	;# 
   124  0295                     	;# 
   125  0296                     	;# 
   126  0298                     	;# 
   127  0299                     	;# 
   128  029A                     	;# 
   129  029B                     	;# 
   130  029C                     	;# 
   131  029D                     	;# 
   132  029E                     	;# 
   133  0311                     	;# 
   134  0312                     	;# 
   135  0313                     	;# 
   136  0318                     	;# 
   137  0319                     	;# 
   138  031A                     	;# 
   139  038C                     	;# 
   140  038D                     	;# 
   141  038E                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  0394                     	;# 
   146  0395                     	;# 
   147  0396                     	;# 
   148  039A                     	;# 
   149  039C                     	;# 
   150  039D                     	;# 
   151  039E                     	;# 
   152  039F                     	;# 
   153  0415                     	;# 
   154  0416                     	;# 
   155  0417                     	;# 
   156  041C                     	;# 
   157  041D                     	;# 
   158  041E                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170  0015                     _TMR0	set	21
   171  005F                     _GIE	set	95
   172  005C                     _INTE	set	92
   173  0059                     _INTF	set	89
   174  005E                     _PEIE	set	94
   175  006C                     _RB4	set	108
   176  0070                     _RC0	set	112
   177  0071                     _RC1	set	113
   178  008D                     _RCIF	set	141
   179  005D                     _TMR0IE	set	93
   180  005A                     _TMR0IF	set	90
   181  008C                     _TRISA	set	140
   182  008D                     _TRISB	set	141
   183  008E                     _TRISC	set	142
   184  04AE                     _INTEDG	set	1198
   185  04A8                     _PS0	set	1192
   186  04A9                     _PS1	set	1193
   187  04AA                     _PS2	set	1194
   188  04AB                     _PSA	set	1195
   189  048D                     _RCIE	set	1165
   190  04AD                     _TMR0CS	set	1197
   191  08EF                     _RXDTSEL	set	2287
   192  08EA                     _TXCKSEL	set	2282
   193  018C                     _ANSELA	set	396
   194  018D                     _ANSELB	set	397
   195  018E                     _ANSELC	set	398
   196  0199                     _RCREG	set	409
   197  019C                     _SPBRGH	set	412
   198  019B                     _SPBRGL	set	411
   199  0CFB                     _BRG16	set	3323
   200  0CF2                     _BRGH	set	3314
   201  0CEC                     _CREN	set	3308
   202  0CEF                     _SPEN	set	3311
   203  0CF4                     _SYNC	set	3316
   204                           
   205                           	psect	intentry
   206  0004                     __pintentry:	
   207                           
   208                           ; #config settings
   209  0000                     
   210 ;; *************** function _intr *****************
   211 ;; Defined at:
   212 ;;		line 48 in file "max_bell.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;  data            1    2[COMMON] unsigned char 
   217 ;; Return value:  Size  Location     Type
   218 ;;		None               void
   219 ;; Registers used:
   220 ;;		wreg, status,2, status,0
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   229 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   230 ;;Total ram usage:        3 bytes
   231 ;; Hardware stack levels used:    1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		Interrupt level 1
   236 ;; This function uses a non-reentrant model
   237 ;;
   238  0004                     _intr:	
   239                           
   240                           ;incstack = 0
   241                           ; Regs used in _intr: [wreg+status,2+status,0]
   242  0004  3180               	pagesel	$
   243  0005  0020               	movlb	0	; select bank0
   244  0006  087F               	movf	127,w
   245  0007  00F1               	movwf	??_intr+1
   246                           
   247                           ;max_bell.c: 49: if (RCIF) {
   248  0008  1E91               	btfss	17,5	;volatile
   249  0009  283B               	goto	i1l77
   250                           
   251                           ;max_bell.c: 50: RCIF = 0;
   252  000A  1291               	bcf	17,5	;volatile
   253                           
   254                           ;max_bell.c: 52: char data = RCREG;
   255  000B  0023               	movlb	3	; select bank3
   256  000C  0819               	movf	25,w	;volatile
   257  000D  00F0               	movwf	??_intr
   258  000E  0870               	movf	??_intr,w
   259  000F  00F2               	movwf	intr@data
   260                           
   261                           ;max_bell.c: 53: if (data == 1 && trigger == 0) {
   262  0010  0872               	movf	intr@data,w
   263  0011  3A01               	xorlw	1
   264  0012  1D03               	skipz
   265  0013  2824               	goto	i1l616
   266  0014  087A               	movf	_trigger+1,w
   267  0015  0479               	iorwf	_trigger,w
   268  0016  1D03               	skipz
   269  0017  2824               	goto	i1l616
   270                           
   271                           ;max_bell.c: 54: RC1 = 1;
   272  0018  0020               	movlb	0	; select bank0
   273  0019  148E               	bsf	14,1	;volatile
   274                           
   275                           ;max_bell.c: 55: RB4 = 0;
   276  001A  120D               	bcf	13,4	;volatile
   277                           
   278                           ;max_bell.c: 56: TMR0 = 100;
   279  001B  3064               	movlw	100
   280  001C  0095               	movwf	21	;volatile
   281                           
   282                           ;max_bell.c: 57: TMR0IE = 1;
   283  001D  168B               	bsf	11,5	;volatile
   284                           
   285                           ;max_bell.c: 58: TMR0IF = 0;
   286  001E  110B               	bcf	11,2	;volatile
   287                           
   288                           ;max_bell.c: 59: trigger = 2;
   289  001F  3002               	movlw	2
   290  0020  00F9               	movwf	_trigger
   291  0021  3000               	movlw	0
   292  0022  00FA               	movwf	_trigger+1
   293                           
   294                           ;max_bell.c: 60: } else if (data == 2 && trigger == 1) {
   295  0023  282F               	goto	i1l622
   296  0024                     i1l616:	
   297  0024  0872               	movf	intr@data,w
   298  0025  3A02               	xorlw	2
   299  0026  1D03               	skipz
   300  0027  282F               	goto	i1l622
   301  0028  3001               	movlw	1
   302  0029  0679               	xorwf	_trigger,w
   303  002A  047A               	iorwf	_trigger+1,w
   304  002B  1D03               	skipz
   305  002C  282F               	goto	i1l622
   306                           
   307                           ;max_bell.c: 62: trigger = 0;
   308  002D  01F9               	clrf	_trigger
   309  002E  01FA               	clrf	_trigger+1
   310  002F                     i1l622:	
   311                           
   312                           ;max_bell.c: 63: }
   313                           ;max_bell.c: 68: RC0 = 1;
   314  002F  0020               	movlb	0	; select bank0
   315  0030  140E               	bsf	14,0	;volatile
   316                           
   317                           ;max_bell.c: 69: _delay((unsigned long)((10)*(500000/4000.0)));
   318  0031  30F9               	movlw	249
   319  0032  00F0               	movwf	??_intr
   320  0033                     u10_27:	
   321  0033  2834               	nop2
   322  0034  0BF0               	decfsz	??_intr,f
   323  0035  2833               	goto	u10_27
   324  0036  2837               	nop2	;nop
   325  0037  2838               	nop2	;nop
   326                           
   327                           ;max_bell.c: 70: RC0 = 0;
   328  0038  0020               	movlb	0	; select bank0
   329  0039  100E               	bcf	14,0	;volatile
   330                           
   331                           ;max_bell.c: 71: } else if (TMR0IF && TMR0IE) {
   332  003A  285C               	goto	i1l87
   333  003B                     i1l77:	
   334  003B  190B               	btfsc	11,2	;volatile
   335  003C  1E8B               	btfss	11,5	;volatile
   336  003D  2850               	goto	i1l82
   337                           
   338                           ;max_bell.c: 72: RB4 = !RB4;
   339  003E  3010               	movlw	16
   340  003F  068D               	xorwf	13,f
   341                           
   342                           ;max_bell.c: 73: TMR0IF = 0;
   343  0040  110B               	bcf	11,2	;volatile
   344                           
   345                           ;max_bell.c: 74: if (buzzer_count == 20) {
   346  0041  3014               	movlw	20
   347  0042  0677               	xorwf	_buzzer_count,w
   348  0043  0478               	iorwf	_buzzer_count+1,w
   349  0044  1D03               	skipz
   350  0045  2849               	goto	i1l640
   351                           
   352                           ;max_bell.c: 75: TMR0IE = 0;
   353  0046  128B               	bcf	11,5	;volatile
   354                           
   355                           ;max_bell.c: 76: RB4 = 1;
   356  0047  160D               	bsf	13,4	;volatile
   357  0048  2856               	goto	L1
   358  0049                     i1l640:	
   359                           ;max_bell.c: 79: } else {
   360                           
   361                           ;max_bell.c: 78: trigger = 1;
   362                           
   363                           ;max_bell.c: 77: buzzer_count = 0;
   364                           
   365                           
   366                           ;max_bell.c: 80: buzzer_count++;
   367  0049  3001               	movlw	1
   368  004A  07F7               	addwf	_buzzer_count,f
   369  004B  3000               	movlw	0
   370  004C  3DF8               	addwfc	_buzzer_count+1,f
   371                           
   372                           ;max_bell.c: 81: TMR0 = 100;
   373  004D  3064               	movlw	100
   374  004E  0095               	movwf	21	;volatile
   375                           
   376                           ;max_bell.c: 82: }
   377                           ;max_bell.c: 83: } else if (INTF) {
   378  004F  285C               	goto	i1l87
   379  0050                     i1l82:	
   380  0050  1C8B               	btfss	11,1	;volatile
   381  0051  285C               	goto	i1l87
   382                           
   383                           ;max_bell.c: 85: INTF = 0;
   384  0052  108B               	bcf	11,1	;volatile
   385                           
   386                           ;max_bell.c: 86: TMR0IE = 0;
   387  0053  128B               	bcf	11,5	;volatile
   388                           
   389                           ;max_bell.c: 87: RB4 = 1;
   390  0054  160D               	bsf	13,4	;volatile
   391                           
   392                           ;max_bell.c: 88: RC1 = 0;
   393  0055  108E               	bcf	14,1	;volatile
   394  0056                     L1:	
   395                           
   396                           ;max_bell.c: 89: buzzer_count = 0;
   397  0056  01F7               	clrf	_buzzer_count
   398  0057  01F8               	clrf	_buzzer_count+1
   399                           
   400                           ;max_bell.c: 90: trigger = 1;
   401  0058  3001               	movlw	1
   402  0059  00F9               	movwf	_trigger
   403  005A  3000               	movlw	0
   404  005B  00FA               	movwf	_trigger+1
   405  005C                     i1l87:	
   406  005C  0871               	movf	??_intr+1,w
   407  005D  00FF               	movwf	127
   408  005E  0009               	retfie
   409  005F                     __end_of_intr:	
   410  007E                     btemp	set	126	;btemp
   411  007E                     wtemp0	set	126
   412                           
   413                           	psect	cinit
   414  0088                     start_initialization:	
   415  0088                     __initialization:	
   416                           
   417                           ; Clear objects allocated to COMMON
   418  0088  01F7               	clrf	__pbssCOMMON& (0+127)
   419  0089  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   420  008A  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   421  008B  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   422  008C                     end_of_initialization:	
   423                           ;End of C runtime variable initialization code
   424                           
   425  008C                     __end_of__initialization:	
   426  008C  0020               	movlb	0
   427  008D  3180  2861         	ljmp	_main	;jump to C main() function
   428                           
   429                           	psect	bssCOMMON
   430  0077                     __pbssCOMMON:	
   431  0077                     _buzzer_count:	
   432  0077                     	ds	2
   433  0079                     _trigger:	
   434  0079                     	ds	2
   435                           
   436                           	psect	cstackCOMMON
   437  0070                     __pcstackCOMMON:	
   438  0070                     ?_intr:	
   439  0070                     ??_intr:	
   440                           ; 0 bytes @ 0x0
   441                           
   442                           
   443                           ; 0 bytes @ 0x0
   444  0070                     	ds	2
   445  0072                     intr@data:	
   446                           
   447                           ; 1 bytes @ 0x2
   448  0072                     	ds	1
   449  0073                     ?_main:	
   450  0073                     main@argc:	
   451                           ; 2 bytes @ 0x3
   452                           
   453                           
   454                           ; 2 bytes @ 0x3
   455  0073                     	ds	2
   456  0075                     main@argv:	
   457                           
   458                           ; 2 bytes @ 0x5
   459  0075                     	ds	2
   460  0077                     ??_main:	
   461                           
   462                           	psect	maintext
   463  0061                     __pmaintext:	
   464                           ; 0 bytes @ 0x7
   465 ;;
   466 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   467 ;;
   468 ;; *************** function _main *****************
   469 ;; Defined at:
   470 ;;		line 94 in file "max_bell.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  argc            2    3[COMMON] int 
   473 ;;  argv            2    5[COMMON] PTR PTR unsigned char 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  2    3[COMMON] int 
   478 ;; Registers used:
   479 ;;		wreg, status,2
   480 ;; Tracked objects:
   481 ;;		On entry : 17F/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   489 ;;Total ram usage:        4 bytes
   490 ;; Hardware stack levels required when called:    1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		Startup code after reset
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _main
   500  0061                     _main:	
   501                           
   502                           ;max_bell.c: 95: ANSELA=0;
   503                           
   504                           ;incstack = 0
   505                           ; Regs used in _main: [wreg+status,2]
   506  0061  0023               	movlb	3	; select bank3
   507  0062  018C               	clrf	12	;volatile
   508                           
   509                           ;max_bell.c: 96: ANSELB=0;
   510  0063  018D               	clrf	13	;volatile
   511                           
   512                           ;max_bell.c: 97: ANSELC=0;
   513  0064  018E               	clrf	14	;volatile
   514                           
   515                           ;max_bell.c: 98: TRISA = 0xff;
   516  0065  30FF               	movlw	255
   517  0066  0021               	movlb	1	; select bank1
   518  0067  008C               	movwf	12	;volatile
   519                           
   520                           ;max_bell.c: 99: TRISB = 0xef;
   521  0068  30EF               	movlw	239
   522  0069  008D               	movwf	13	;volatile
   523                           
   524                           ;max_bell.c: 100: TRISC = 0xfc;
   525  006A  30FC               	movlw	252
   526  006B  008E               	movwf	14	;volatile
   527                           
   528                           ;max_bell.c: 102: RXDTSEL = 0;
   529  006C  0022               	movlb	2	; select bank2
   530  006D  139D               	bcf	29,7	;volatile
   531                           
   532                           ;max_bell.c: 103: TXCKSEL = 0;
   533  006E  111D               	bcf	29,2	;volatile
   534                           
   535                           ;max_bell.c: 104: CREN = 1;
   536  006F  0023               	movlb	3	; select bank3
   537  0070  161D               	bsf	29,4	;volatile
   538                           
   539                           ;max_bell.c: 105: SYNC = 0;
   540  0071  121E               	bcf	30,4	;volatile
   541                           
   542                           ;max_bell.c: 106: SPEN = 1;
   543  0072  179D               	bsf	29,7	;volatile
   544                           
   545                           ;max_bell.c: 107: BRG16 = 1;
   546  0073  159F               	bsf	31,3	;volatile
   547                           
   548                           ;max_bell.c: 108: BRGH = 1;
   549  0074  151E               	bsf	30,2	;volatile
   550                           
   551                           ;max_bell.c: 109: SPBRGH = 0;
   552  0075  019C               	clrf	28	;volatile
   553                           
   554                           ;max_bell.c: 110: SPBRGL = 12;
   555  0076  300C               	movlw	12
   556  0077  009B               	movwf	27	;volatile
   557                           
   558                           ;max_bell.c: 112: TMR0CS = 0;
   559  0078  0021               	movlb	1	; select bank1
   560  0079  1295               	bcf	21,5	;volatile
   561                           
   562                           ;max_bell.c: 113: PSA = 0;
   563  007A  1195               	bcf	21,3	;volatile
   564                           
   565                           ;max_bell.c: 114: PS0 = 1;
   566  007B  1415               	bsf	21,0	;volatile
   567                           
   568                           ;max_bell.c: 115: PS1 = 1;
   569  007C  1495               	bsf	21,1	;volatile
   570                           
   571                           ;max_bell.c: 116: PS2 = 0;
   572  007D  1115               	bcf	21,2	;volatile
   573                           
   574                           ;max_bell.c: 118: GIE = 1;
   575  007E  178B               	bsf	11,7	;volatile
   576                           
   577                           ;max_bell.c: 119: RCIE = 1;
   578  007F  1691               	bsf	17,5	;volatile
   579                           
   580                           ;max_bell.c: 120: PEIE = 1;
   581  0080  170B               	bsf	11,6	;volatile
   582                           
   583                           ;max_bell.c: 122: INTEDG = 0;
   584  0081  1315               	bcf	21,6	;volatile
   585                           
   586                           ;max_bell.c: 123: INTE = 1;
   587  0082  160B               	bsf	11,4	;volatile
   588                           
   589                           ;max_bell.c: 125: RC0 = 0;
   590  0083  0020               	movlb	0	; select bank0
   591  0084  100E               	bcf	14,0	;volatile
   592                           
   593                           ;max_bell.c: 126: RC1 = 0;
   594  0085  108E               	bcf	14,1	;volatile
   595                           
   596                           ;max_bell.c: 127: RB4 = 1;
   597  0086  160D               	bsf	13,4	;volatile
   598  0087                     l90:	
   599                           ;max_bell.c: 129: while (1);
   600                           
   601  0087  2887               	goto	l90
   602  0088                     __end_of_main:	
   603                           ;max_bell.c: 130: return (0);
   604                           ;	Return value of _main is never used
   605                           


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _intr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _intr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _intr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _intr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _intr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _intr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _intr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _intr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _intr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _intr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _intr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _intr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _intr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _intr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4       0
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _intr                                                 3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _intr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Thu Mar  6 01:38:50 2014

            __CFG_CP$OFF 0000                       l90 0087                      _GIE 005F  
                    _RC0 0070                      _RC1 0071                      _RB4 006C  
                    _PS0 04A8                      _PS1 04A9                      _PS2 04AA  
           __CFG_CPD$OFF 0000                      _PSA 04AB             __CFG_BORV$LO 0000  
           __CFG_LVP$OFF 0000                     _BRGH 0CF2                     _CREN 0CEC  
                   _PEIE 005E                     _INTE 005C                     _INTF 0059  
                   _RCIE 048D                     _RCIF 008D                     i1l82 0050  
                   i1l77 003B                     i1l87 005C                     _TMR0 0015  
                   _SPEN 0CEF                     _SYNC 0CF4             __CFG_WRT$OFF 0000  
                   _main 0061                     _intr 0004                     btemp 007E  
                   start 005F            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0073                    ?_intr 0070                    _BRG16 0CFB  
          __CFG_WDTE$OFF 0000                    i1l622 002F                    i1l640 0049  
                  i1l616 0024                    _RCREG 0199                    u10_27 0033  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
         __CFG_FCMEN$OFF 0000           __CFG_BOREN$OFF 0000                    wtemp0 007E  
        __initialization 0088             __end_of_main 0088             __end_of_intr 005F  
                 ??_main 0077                   ??_intr 0070           __CFG_PLLEN$OFF 0000  
                 _ANSELA 018C                   _ANSELB 018D                   _ANSELC 018E  
                 _INTEDG 04AE                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR0CS 04AD                   _SPBRGH 019C                   _SPBRGL 019B  
         __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  __end_of__initialization 008C  
         __pcstackCOMMON 0070               __pmaintext 0061               __pintentry 0004  
                _RXDTSEL 08EF                  _TXCKSEL 08EA                  _trigger 0079  
   end_of_initialization 008C         __CFG_FOSC$INTOSC 0000      start_initialization 0088  
            __pbssCOMMON 0077             _buzzer_count 0077            __size_of_main 0027  
          __size_of_intr 005B                 main@argc 0073                 main@argv 0075  
               intr@data 0072                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
